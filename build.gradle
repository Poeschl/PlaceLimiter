import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext.kotlinVersion = '1.0.5'
    ext.powerMockVersion = '1.6.6'

    repositories {
        jcenter()
        mavenCentral()
    }

    //noinspection GroovyAssignabilityCheck
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3"
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://maven.sk89q.com/repo/" }
}

group = 'io.github.poeschl.bukkit'
version = '1.3-SNAPSHOT'

description = """PlaceLimiter"""

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.kt3k.coveralls'

sourceCompatibility = 1.7
targetCompatibility = 1.7

//noinspection GroovyAssignabilityCheck
processResources {
    filter(ReplaceTokens, tokens: [
            "name"   : project.name,
            "version": project.version
    ])
}

//noinspection GroovyAssignabilityCheck
jar {
    manifest {
        attributes("Project": project.name,
                "Version": project.version)
    }
}

apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
    configurations = [project.configurations.compile]
    classifier = null
}

apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.7.7.201606060606"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ["**/InstanceFactory.*"])
        })
    }
}

//noinspection GroovyAssignabilityCheck
dependencies {
    compileOnly 'org.bukkit:bukkit:1.7.9-R0.2'
    compile 'com.squareup.moshi:moshi:1.1.0'
    compile 'com.squareup.okio:okio:1.8.0'

    testCompile 'org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion'
    testCompile 'org.bukkit:bukkit:1.7.9-R0.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile 'org.mockito:mockito-core:2.2.15'
    testCompile 'com.nhaarman:mockito-kotlin:0.11.0'
    //TODO: Waiting for mokito 2 support of powermock
//    testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
//    testCompile "org.powermock:powermock-api-mockito2:$powerMockVersion"
}
